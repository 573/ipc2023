name: Build

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - bamboovir-template
    paths:
      - "src/**"
      - "resources/**"
      - "**.nix"
      - ".github/workflows/*.yml"

jobs:
  dependencies:
    name: Build dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Check out source files
        uses: actions/checkout@v4

  build:
    name: Build PDF files
    runs-on: ubuntu-latest
    needs: dependencies

    steps:
      - name: Set git to use LF
        run: |
            git config --global core.autocrlf false
            git config --global core.eol lf

      - name: Check out source files
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Build document
        run: |
          nix build .#resume --quiet
          cp result/* .

      - name: Upload build assets
        uses: actions/upload-artifact@v3
        with:
          name: resume--PR-${{ github.event.pull_request.number }}--${{ github.sha }}
          path: resume.pdf

  release:
    if: github.event_name != 'pull_request'
    name: "Create tag/pre-release"
    runs-on: ubuntu-latest
    needs: [dependencies,build]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create pre-release (v${{ github.run_number }}-${{ github.sha }})
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}-${{ github.sha }}
          release_name: Version ${{ github.run_number }} (${{ github.sha }})
          draft: false
          prerelease: true

  assets:
    name: Upload release assets
    runs-on: ubuntu-latest
    needs: [dependencies,release]

    steps:
      - name: Download build assets (${{ matrix.assets.input }})
        uses: actions/download-artifact@v3
        with:
          name: resume--PR-${{ github.event.pull_request.number }}--${{ github.sha }}
          path: resume--PR-${{ github.event.pull_request.number }}--${{ github.sha }}

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: resume--PR-${{ github.event.pull_request.number }}--${{ github.sha }}/resume.pdf
          asset_name: ${{ github.run_number }}--resume--${{ github.sha  }}.pdf
          asset_content_type: application/pdf
